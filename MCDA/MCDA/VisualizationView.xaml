<UserControl x:Class="MCDA.VisualizationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    xmlns:local="clr-namespace:MCDA.Model"
    xmlns:customControl="clr-namespace:MCDA"
    Height="300" Width="500">
    <UserControl.Resources>
        <local:NullToFalseConverter x:Key="nullToFalseConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--<Label Content="Layer" Grid.Column="0" Grid.Row="0" />
        <Label Content="Attribute" Grid.Column="1" Grid.Row="0" />
        <ComboBox ItemsSource="{Binding Path=MCDAWorkspaceContainer, Mode=TwoWay}" DisplayMemberPath="FeatureLayer.Name" SelectedValue="{Binding Path=SelectedMCDAWorkspaceContainer, UpdateSourceTrigger=PropertyChanged}" Name="layerComboBox" Grid.Column="0" Grid.Row="1" />
        <ComboBox ItemsSource="{Binding Path=Fields, Mode=TwoWay}" DisplayMemberPath="Name" SelectedValue="{Binding Path=SelectedIField, UpdateSourceTrigger=PropertyChanged}" Name="attributeComboBox" Grid.Column="1" Grid.Row="1"/>-->
        <ListView Name="listView" Grid.Column="0" Grid.Row="0"  ItemsSource="{Binding Path=ResultList, Mode=OneWay}" SelectedItem="{Binding Path=SelectedResult, Mode=TwoWay}" HorizontalContentAlignment="Stretch">
            <ListView.View>
                <GridView>
                    <GridViewColumn  Header="Field"  Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Label Name="fieldLabel" Content="{Binding Path=Field.Name, Mode=OneWay}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn  Header="Owner"  Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Label Name="ownerLabel" Content="{Binding Path=MCDAWorkspaceContainer.FeatureLayer.Name, Mode=OneWay}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!--<GridViewColumn  Header="Locked"  Width="Auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Name="benefitCriteriaCheckBox" IsChecked="{Binding Path=IsLocked, Mode=TwoWay}" Grid.Column="3"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>-->
                </GridView>
            </ListView.View>
        </ListView >
        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ResizeBehavior="PreviousAndNext" />
        <TabControl   Name="visualizationMethodsTabControl"  Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="0">
            <TabItem Header="Class-Breaks Renderer" Name="classBreaksRenderer">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TabControl   Name="tabControl1"   Grid.ColumnSpan="2" Grid.Row="2">
                        <TabItem Header="Color Ramp" Name="colorRamp">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <GroupBox Header="Negativ Color" Grid.Column="0" Grid.Row="0" Height="50">
                                    <DockPanel LastChildFill="True" Name="dockPanel1"  />
                                </GroupBox>
                                <GroupBox Header="Positiv Color" Grid.Column="0" Grid.Row="1" Height="50">
                                    <DockPanel LastChildFill="True" Name="dockPanel2"  />
                                </GroupBox>
                                <GroupBox Header="Linear Gradient" Grid.Column="0" Grid.Row="2">
                                    <Rectangle Name="colorRampRectangle"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                </GroupBox>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Classification" Name="classification">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Label  Content="Classification Method" Grid.Column="0" Grid.Row="0" />
                                <Label  Content="Classes" Grid.Column="1" Grid.Row="0" />
                                <ComboBox ItemsSource="{Binding Path=ListOfClassificationMethod, Mode=OneWay}" DisplayMemberPath="MethodName" SelectedValue="{Binding Path=SelectedClassificationMethod, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding SelectedValue, ElementName=attributeComboBox, Converter={StaticResource nullToFalseConverter}}" Name="classificationComboBox" Grid.Column="0" Grid.Row="1"/>
                                <ComboBox ItemsSource="{Binding Path=NumberOfClasses, Mode=OneWay}" SelectedValue="{Binding Path=SelectedNumberOfClasses, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding SelectedValue, ElementName=attributeComboBox, Converter={StaticResource nullToFalseConverter}}" Name="classesComboBox" Grid.Column="1" Grid.Row="1"/>
                                <GroupBox Header="Histogram" Grid.Row="2" Grid.ColumnSpan="2">
                                    <customControl:Histogram x:Name="historgram"/>
                                </GroupBox>
                            </Grid>
                        </TabItem>
                    </TabControl>
                    <Button Grid.Column="1" Grid.Row="3" Width="50" HorizontalAlignment="Center" Command="{Binding Path=RemoveClassBreaksRendererCommand}">
                        Remove
                    </Button>
                    <Button Grid.Column="1" Grid.Row="3" Width="50" HorizontalAlignment="Right" Command="{Binding Path=ApplyClassBreaksRendererCommand}">
                        Apply
                    </Button>
                </Grid>
            </TabItem>
            <TabItem Header="Bi-Polar Renderer" Name="uniqueValueRenderer">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Negativ Color" Grid.ColumnSpan="2" Grid.Row="0" Height="50">
                        <DockPanel LastChildFill="True" Name="biPolarNegativColorDockPanel"  />
                    </GroupBox>
                    <GroupBox Header="Positiv Color" Grid.ColumnSpan="2" Grid.Row="1" Height="50">
                        <DockPanel LastChildFill="True" Name="biPolarPositivColorDockPanel"  />
                    </GroupBox>
                    <GroupBox Header="Neutral Color" Grid.ColumnSpan="2" Grid.Row="2" Height="50">
                        <DockPanel LastChildFill="True" Name="biPolarNeutralColorDockPanel"  />
                    </GroupBox>
                    <GroupBox Header="Color Scale" Grid.ColumnSpan="2" Grid.Row="3">
                        <Rectangle Name="biPolarColorScaleRectangle"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                    </GroupBox>
                    <Slider Name="biPolarColorSlider" Grid.ColumnSpan="2" Grid.Row="4" Height="30"  Value="{Binding Path=BiPolarColorSliderValue, Mode=TwoWay}" Orientation="Horizontal" Minimum="1" Maximum="99" />
                    <Button Grid.Column="1" Grid.Row="5" Width="50" HorizontalAlignment="Center" Command="{Binding Path=RemoveBiPolarRendererCommand}">
                        Remove
                    </Button>
                    <Button Grid.Column="1" Grid.Row="5" Width="50" HorizontalAlignment="Right" Command="{Binding Path=ApplyBiPolarRendererCommand}">
                        Apply
                    </Button>
                </Grid>
            </TabItem>
        </TabControl>
        
    </Grid>
</UserControl>
